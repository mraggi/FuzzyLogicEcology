A = [1120.308, 1132.510, 23.046, 597.106, 96.802, 97.201, 183.773, 335.991, 175.814, 43.411, 603.304, 84.281, 132.338, 227.370, 578.286, 137.857, 23.385, 510.791, 329.708, 41.349, 355.944, 28.595, 2379.406, 1600.267, 961.496, 312.123, 82.294, 257.786, 202.636, 774.432, 160.628, 1943.098, 195.661, 524.552, 914.946, 17.762, 1284.876, 81.570, 157.766, 6.268, 1136.382, 90.707, 50.725, 876.551, 75.528, 1812.879, 4.754, 109.988, 182.150, 28.040, 409.919, 706.660, 87.110, 271.953, 621.639, 70.938, 34.179, 1449.949, 60.801, 71.486, 183.548, 11.983, 30.362, 9.553, 103.387, 141.723, 39.612, 121.756, 390.717, 10.377, 16.865, 675.723, 21.506, 119.987, 17.363, 20.268, 35.870, 64.554, 361.818, 207.457, 19.449, 458.712, 172.980, 122.227, 282.807, 19.462, 29.570, 28.320, 411.262, 30.096, 14.707, 60.505, 199.658, 1530.657, 245.189, 51.047, 846.273, 11.498, 86.784, 519.253, 4.914, 25.432, 50.880, 1129.010, 20.547, 39.264, 16.819, 44.964, 36.667, 37.745, 916.549, 155.288, 20.159, 80.175, 37.745, 233.951, 1359.756, 162.877, 36.559, 186.632, 23.322, 3.604, 208.896, 33.217, 5.280, 66.384, 341.801, 731.577, 1266.123, 27.379, 28.457, 73.473, 404.334, 1963.768, 882.000, 1458.260, 2674.696, 17.386, 39.459, 1449.857, 37.344, 1200.010, 398.764, 158.441, 146.795, 118.352, 178.022, 349.224, 89.717, 96.356, 1015.698, 381.928, 231.655, 1153.814, 907.860, 54.087, 754.259, 98.779, 37.926, 1408.233, 895.020, 227.617, 882.675, 25.584, 42.314, 268.370, 69.185, 277.533, 835.959, 189.391, 549.017, 69.970, 84.972, 283.772, 318.073, 292.147, 1731.568, 55.944, 104.186, 6.202, 93.795, 310.050, 508.094, 171.606, 189.515, 18.197, 336.771, 100.554, 366.789, 8.950, 91.134, 157.507, 446.984, 29.813, 1508.782, 137.727, 18.907, 277.916, 407.546, 890.871, 272.145]

A.sort()

#A = A[15:]

P = point2d((0,0))

a = 0
b = 0

L = []

for i in range(len(A)):
	b = A[i]
	#print a,b
	P += point2d((log(b),(i+1)))
	L.append( (RDF(log(b)),i+1) )
	#if (a != b):
		#P += plot(i,x,a,b)
	a = b
print L

def f(a,b,L):
	return sum([(l[1] - a*l[0]-b)^2 for l in L])

def fit_line(L):
	a = var('a')
	b = var('b')

	R = minimize(f(a,b,L),(25,-150),algorithm="powell")
	print R
	X = [l[0] for l in L]
	m = min(X)
	M = max(X)
	return plot(R[0]*x+R[1], x, m, M,color="red", thickness=1)

P += fit_line(L[:15])
P += fit_line(L[15:194])
P += fit_line(L[194:])

P.show()